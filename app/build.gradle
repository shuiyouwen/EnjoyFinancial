apply plugin: 'com.android.application'

//获取当前日期
def releaseTime() {
    return new Date().format("yyyyMMdd")
}

//切换接口环境
Map<String, String> propertices = project.getProperties();
String environment = "product";//接口环境，默认生产

def copyUrlConfig(path) {
    copy {
        from('config/' + path) {
            include('**/*')
        }
        into('src/main/assets/config')
    }
}

if (propertices.containsKey("environment")) {
    environment = propertices.get("environment")
    if (!environment.equals("product") && !environment.equals("preproduct")) {
        throw new Exception("环境切换错误，请检查！")
    }
} else {
    environment = "product";
}

copyUrlConfig(environment);
println("---项目 environment: " + environment + "----")

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.example.shui.enjoyfinancial"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                environment = propertices.containsKey("environment") ? propertices.get("environment") : "product";
                outputFileName = "Cxjr_V${defaultConfig.versionName}_${releaseTime()}_${environment}_${variant.buildType.name}.apk"
            }
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:25.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:design:25.4.0'
    implementation 'com.android.support:appcompat-v7:25.4.0'
    implementation 'com.android.support:recyclerview-v7:25.4.0'
    implementation 'com.android.support:cardview-v7:25.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    //butterknife资源文件findViewById
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //BaseRecyclerViewAdapterHelper简化recycleView adapter使用
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.27'
    //retrofit2网络请求
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit-mock:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    //rxjava异步处理库
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //rxjava结合retrofit
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    //事件总线
    implementation 'com.hwangjr.rxbus:rxbus:2.0.0-beta'
    //rxjava和fragment或activity生命周期绑定，防止内存泄露
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.1.0'
    //网络请求进度提示
    implementation 'com.kaopiz:kprogresshud:1.1.0'
    //图片加载
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    //解决GsonFormat插件报错
    debugImplementation 'io.github.openfeign:feign-gson:9.4.0'
    //debug模式下检测app内存泄露情况
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    implementation project(':bottom-navigation-bar')
}